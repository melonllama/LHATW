<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Player_spr</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Variables
global.phealth = 100;
global.grav = 1;
global.hsp = 0;
global.vsp = 0;
jsp = 16.5;
movespeed = 5;
global.Flip = 1;
global.weaponSwitch = 0;
ejump = 0;
Screa = 0;
Gcrea = 0;
global.ammo = 100; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//player input
right_key = keyboard_check(vk_right);
left_key = keyboard_check(vk_left);
up_key = keyboard_check_pressed(vk_up);
down_key = keyboard_check(vk_down);
sword_key = keyboard_check_pressed(ord('1'));
gun_key = keyboard_check_pressed(ord('2'));

//flip function
if(global.hsp &lt; 0) {
    global.Flip = -1;
}
if(global.hsp &gt; 0) {
    global.Flip = 1;
}

//actions to input

if(right_key == 1){
    global.hsp = movespeed;
} else if(left_key == 1){
    global.hsp = -movespeed;
} else {
    global.hsp = 0;
};  


if(global.vsp &lt; 10) {
    global.vsp += global.grav;
};

if(place_meeting(x,y+1,Wall_obj)){
    global.vsp = up_key * -jsp;
};

if(sword_key == 1) {
    global.weaponSwitch = 0;
}

if(gun_key == 1) {
    global.weaponSwitch = 1;
}

//Gun Switching

//Sword

if (Screa == 0 &amp;&amp; global.weaponSwitch == 0) {
    instance_create(x,y,sword_obj);
    Screa=1;
}

if (Screa == 1 &amp;&amp; global.weaponSwitch != 0) {
    with(sword_obj) {
        instance_destroy();
    }
    Screa=0;
}

//Gun

if (Gcrea == 0 &amp;&amp; global.weaponSwitch == 1) {
    instance_create(x,y,obj_tom);
    Gcrea=1;
}

if (Gcrea == 1 &amp;&amp; global.weaponSwitch != 1) {
    with(obj_tom) {
        instance_destroy();
    }
    Gcrea=0;
}

//collision

if (place_meeting(x+global.hsp,y,Wall_obj)){
    while(!place_meeting(x+sign(global.hsp),y,Wall_obj)) {
        x+=sign(global.hsp);
    };
    global.hsp = 0;
};
x+=global.hsp;

if (place_meeting(x,y+global.vsp,Wall_obj)){
    while(!place_meeting(x,y+sign(global.vsp),Wall_obj)) {
        y+=sign(global.vsp);
    };
    global.vsp = 0;
};
y+=global.vsp;







</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
